-------------------------------------------------------------------------------
-- TABLES DE ENTIDADES
--------------------------------------------------------------------------------
CREATE TABLE PERSON(
  ID_PERSON NUMBER(4) GENERATED ALWAYS AS IDENTITY,
  FIRST_NAME VARCHAR(30),
  LAST_NAME VARCHAR(30),
  DNI NUMBER(8),
  PHONE NUMBER(9),
  ADDRESS VARCHAR(200),
  EMAIL VARCHAR(200) 
);

CREATE TABLE STUDENT(
  ID_PERSON NUMBER(4),
  CODE_STUDENT CHARACTER(8),
  ID_SCHOOL NUMBER(4)
);

CREATE TABLE TEACHER(
  ID_PERSON NUMBER(4),
  CODE_TEACHER CHARACTER(8)
);

CREATE TABLE DIRECTOR(
  ID_PERSON NUMBER(4),
  CODE_DIRECTOR CHARACTER(8),
  ID_FACULTY NUMBER(4)
);

CREATE TABLE SCHOOL(
    ID_SCHOOL NUMBER(4) GENERATED ALWAYS AS IDENTITY,
    ID_FACULTY NUMBER(4),
    NAME_SCHOOL VARCHAR(50)
);

CREATE TABLE FACULTY(
  ID_FACULTY NUMBER(4) GENERATED ALWAYS AS IDENTITY,
  ID_PERSON NUMBER(4),
  NAME_FACULTY VARCHAR2(50)
);



CREATE TABLE SECTION(
  ID_SECTION NUMBER(4) GENERATED ALWAYS AS IDENTITY,
  ID_SUBJECT NUMBER(4),
  ID_PERSON NUMBER(4),
  ID_EXAM NUMBER(4),
  SECTION_GROUP VARCHAR2(20)
);

CREATE TABLE SUBJECT (
  ID_SUBJECT	NUMBER(4) GENERATED ALWAYS AS IDENTITY ,
  NAME_SUBJECT	VARCHAR2(100)
);

CREATE TABLE THEME (
  ID_THEME NUMBER(4) GENERATED ALWAYS AS IDENTITY,
  ID_SUBJECT NUMBER(4),
  NAME_THEME VARCHAR2(100) 
);

CREATE TABLE QUESTION (
  ID_QUESTION NUMBER (4) GENERATED ALWAYS AS IDENTITY,
  ID_THEME NUMBER(4),
  QUESTION VARCHAR2(500),
  SCORE NUMBER(2)
);

CREATE TABLE ALTERNATIVE(
  ID_ALTERNATIVE NUMBER(4) GENERATED ALWAYS AS IDENTITY,
  ID_QUESTION NUMBER(4),
  ALTERNATIVE_A VARCHAR2(500),
  ALTERNATIVE_B VARCHAR2(500),
  ALTERNATIVE_C VARCHAR2(500),
  ANSWER VARCHAR2(10)
);


CREATE TABLE EXAM(
  ID_EXAM NUMBER(4) GENERATED ALWAYS AS IDENTITY,
  ID_SECTION NUMBER(4)
);

CREATE TABLE QUESTION_EXAM(
  ID_QUESTION_EXAM NUMBER(4) GENERATED ALWAYS AS IDENTITY,
  ID_EXAM NUMBER(4),
  QUESTION VARCHAR2(500),
  N_QUESTION NUMBER(2)
);

CREATE TABLE ALTERNATIVE_EXAM(
  ID_ALTERNATIVE_EXAM NUMBER(4) GENERATED ALWAYS AS IDENTITY,
  ID_QUESTION_EXAM NUMBER(4),
  ALTERNATIVE_A VARCHAR2(500),
  ALTERNATIVE_B VARCHAR2(500),
  ALTERNATIVE_C VARCHAR2(500)
);


CREATE TABLE SECTION_STUDENT (
  ID_SECTION_STUDENT NUMBER(4) GENERATED ALWAYS AS IDENTITY,
  ID_SECTION NUMBER(4),
  ID_PERSON NUMBER(4)
);

CREATE TABLE ANSWERS_STUDENT(
  ID_ANSWERS_STUDENT NUMBER(4) GENERATED ALWAYS AS IDENTITY,
  ID_SECTION_STUDENT NUMBER(4),
  ANSWERS CHAR(15),
  N_QUESTION NUMBER(2)
);

CREATE TABLE NOTE(
  ID_NOTE NUMBER(4) GENERATED ALWAYS AS IDENTITY,
  ID_SECTION_STUDENT NUMBER(4),
  NOTE NUMBER(2,1)
);


--------------------------------------------------------------------------------
-- PRIMARY KEY
--------------------------------------------------------------------------------
ALTER TABLE PERSON ADD CONSTRAINT PERSON_PK PRIMARY KEY (ID_PERSON);
ALTER TABLE TEACHER ADD CONSTRAINT TEACHER_PK PRIMARY KEY (ID_PERSON);
ALTER TABLE STUDENT ADD CONSTRAINT PSTUDENT_PK PRIMARY KEY (ID_PERSON);
ALTER TABLE DIRECTOR ADD CONSTRAINT DIRECTOR_PK PRIMARY KEY (ID_PERSON);
ALTER TABLE FACULTY ADD CONSTRAINT FACULTY_PK PRIMARY KEY (ID_FACULTY);
ALTER TABLE SCHOOL ADD CONSTRAINT SCHOOL_PK PRIMARY KEY (ID_SCHOOL);

ALTER TABLE SECTION ADD CONSTRAINT SECTION_PK PRIMARY KEY (ID_SECTION);
ALTER TABLE SUBJECT ADD CONSTRAINT SUBJECT_PK PRIMARY KEY (ID_SUBJECT);
ALTER TABLE THEME ADD CONSTRAINT THEME_PK PRIMARY KEY (ID_THEME);
ALTER TABLE QUESTION ADD CONSTRAINT QUESTION_PK PRIMARY KEY(ID_QUESTION);
ALTER TABLE ALTERNATIVE ADD CONSTRAINT ALTERNATIVE_PK PRIMARY KEY (ID_ALTERNATIVE);

ALTER TABLE EXAM ADD CONSTRAINT EXAM_PK PRIMARY KEY (ID_EXAM);
ALTER TABLE QUESTION_EXAM ADD CONSTRAINT QUESTION_EXAM_PK PRIMARY KEY (ID_QUESTION_EXAM);
ALTER TABLE ALTERNATIVE_EXAM ADD CONSTRAINT ALTERNATIVE_EXAM_PK PRIMARY KEY (ID_ALTERNATIVE_EXAM);

ALTER TABLE SECTION_STUDENT ADD CONSTRAINT SECTION_STUDENT_PK PRIMARY KEY (ID_SECTION_STUDENT);
ALTER TABLE ANSWERS_STUDENT ADD CONSTRAINT ANSWERS_STUDENT_PK PRIMARY KEY (ID_ANSWERS_STUDENT);
ALTER TABLE NOTE ADD CONSTRAINT NOTE_PK PRIMARY KEY (ID_NOTE);


--------------------------------------------------------------------------------
-- FOREIGN KEY
--------------------------------------------------------------------------------
ALTER TABLE TEACHER ADD CONSTRAINT TEACHER_FK FOREIGN KEY (ID_PERSON) REFERENCES PERSON ON DELETE CASCADE;
ALTER TABLE STUDENT ADD CONSTRAINT STUDENT_1FK FOREIGN KEY (ID_PERSON) REFERENCES PERSON ON DELETE CASCADE;
ALTER TABLE STUDENT ADD CONSTRAINT STUDENT_2FK FOREIGN KEY (ID_SCHOOL) REFERENCES SCHOOL;
ALTER TABLE DIRECTOR ADD CONSTRAINT DIRECTOR_1FK FOREIGN KEY (ID_PERSON) REFERENCES PERSON ON DELETE CASCADE;
ALTER TABLE DIRECTOR ADD CONSTRAINT DIRECTOR_2FK FOREIGN KEY (ID_FACULTY) REFERENCES FACULTY;
ALTER TABLE FACULTY ADD CONSTRAINT FACULTY_FK FOREIGN KEY (ID_PERSON) REFERENCES DIRECTOR;
ALTER TABLE SCHOOL ADD CONSTRAINT SCHOOL_FK FOREIGN KEY (ID_FACULTY) REFERENCES FACULTY;

ALTER TABLE SECTION ADD CONSTRAINT SECTION_1FK FOREIGN KEY (ID_SUBJECT) REFERENCES SUBJECT;
ALTER TABLE SECTION ADD CONSTRAINT SECTION_2FK FOREIGN KEY (ID_PERSON) REFERENCES TEACHER;
ALTER TABLE THEME ADD CONSTRAINT THEME_FK FOREIGN KEY (ID_SUBJECT) REFERENCES SUBJECT;
ALTER TABLE QUESTION ADD CONSTRAINT QUESTION_FK FOREIGN KEY(ID_THEME) REFERENCES THEME;
ALTER TABLE ALTERNATIVE ADD CONSTRAINT ALTERNATIVE_FK FOREIGN KEY(ID_QUESTION) REFERENCES QUESTION;

ALTER TABLE EXAM ADD CONSTRAINT EXAM_FK FOREIGN KEY (ID_SECTION) REFERENCES SECTION;
ALTER TABLE QUESTION_EXAM ADD CONSTRAINT QUESTION_EXAM_FK FOREIGN KEY (ID_EXAM) REFERENCES EXAM;
ALTER TABLE ALTERNATIVE_EXAM ADD CONSTRAINT ALTERNATIVE_EXAM_FK FOREIGN KEY (ID_QUESTION_EXAM) REFERENCES QUESTION_EXAM;

ALTER TABLE SECTION_STUDENT ADD CONSTRAINT SECTION_ESTUDENT_1FK FOREIGN KEY (ID_SECTION) REFERENCES SECTION;
ALTER TABLE SECTION_STUDENT ADD CONSTRAINT SECTION_ESTUDENT_2FK FOREIGN KEY (ID_PERSON) REFERENCES STUDENT;
ALTER TABLE ANSWERS_STUDENT ADD CONSTRAINT ANSWERS_STUDENT_FK FOREIGN KEY (ID_SECTION_STUDENT) REFERENCES SECTION_STUDENT;
ALTER TABLE NOTE ADD CONSTRAINT NOTE_FK FOREIGN KEY (ID_SECTION_STUDENT) REFERENCES SECTION_STUDENT;

--------------------------------------------------------------------------------
-- UNICIDADE DE ATRIBUTO
--------------------------------------------------------------------------------
ALTER TABLE TEACHER MODIFY (CODE_TEACHER UNIQUE);
ALTER TABLE STUDENT MODIFY (CODE_STUDENT UNIQUE);
ALTER TABLE DIRECTOR MODIFY (CODE_DIRECTOR UNIQUE);

--------------------------------------------------------------------------------
-- NO NULO
--------------------------------------------------------------------------------
ALTER TABLE PERSON MODIFY (FIRST_NAME NOT NULL ENABLE);
ALTER TABLE PERSON MODIFY (LAST_NAME NOT NULL ENABLE);
ALTER TABLE PERSON MODIFY (DNI NOT NULL ENABLE);
ALTER TABLE STUDENT MODIFY (CODE_STUDENT NOT NULL ENABLE);
ALTER TABLE TEACHER MODIFY (CODE_TEACHER NOT NULL ENABLE);
ALTER TABLE DIRECTOR MODIFY (CODE_DIRECTOR NOT NULL ENABLE);
ALTER TABLE FACULTY MODIFY (NAME_FACULTY NOT NULL ENABLE);
ALTER TABLE SCHOOL MODIFY (NAME_SCHOOL NOT NULL ENABLE);

ALTER TABLE THEME MODIFY (NAME_THEME NOT NULL ENABLE);
ALTER TABLE QUESTION MODIFY (SCORE NOT NULL ENABLE);
ALTER TABLE QUESTION MODIFY (QUESTION NOT NULL ENABLE);
ALTER TABLE ALTERNATIVE MODIFY (ALTERNATIVE_A NOT NULL ENABLE);
ALTER TABLE ALTERNATIVE MODIFY (ALTERNATIVE_B NOT NULL ENABLE);
ALTER TABLE ALTERNATIVE MODIFY (ALTERNATIVE_C NOT NULL ENABLE);
ALTER TABLE ALTERNATIVE MODIFY (ANSWER NOT NULL ENABLE);

ALTER TABLE ANSWERS_STUDENT MODIFY (ANSWERS NOT NULL ENABLE);
ALTER TABLE ANSWERS_STUDENT MODIFY (N_QUESTION NOT NULL ENABLE);

--------------------------------------------------------------------------------
-- CHECK
--------------------------------------------------------------------------------
ALTER TABLE PERSON ADD CONSTRAINT limit_dni CHECK (DNI BETWEEN 10000000 AND 99999999);
ALTER TABLE PERSON ADD CONSTRAINT limit_phone CHECK (PHONE BETWEEN 100000000 AND 999999999);
ALTER TABLE PERSON ADD CONSTRAINT email_obli CHECK (REGEXP_LIKE(EMAIL, '@unmsm.edu.pe$')) enable novalidate;
ALTER TABLE TEACHER ADD CONSTRAINT range_codet CHECK (REGEXP_LIKE(CODE_TEACHER, 
'[0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z]')) enable novalidate;
ALTER TABLE STUDENT ADD CONSTRAINT range_codes CHECK (REGEXP_LIKE(CODE_STUDENT, 
'[0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z]')) enable novalidate;
ALTER TABLE DIRECTOR ADD CONSTRAINT range_coded CHECK (REGEXP_LIKE(CODE_DIRECTOR, 
'[0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z][0-9|a-z|A-Z]')) enable novalidate;
ALTER TABLE QUESTION ADD CONSTRAINT RANGO_SCORE CHECK (SCORE BETWEEN 0 AND 20);
ALTER TABLE ANSWERS_STUDENT ADD CONSTRAINT ANSWERS_STUDENT CHECK (N_QUESTION BETWEEN 0 AND 10);

--------------------------------------------------------------------------------
-- INSERTS --
--------------------------------------------------------------------------------
INSERT INTO FACULTY (id_Person, name_Faculty) VALUES (NULL, 'Facultad de Sistemas y Software');
INSERT INTO FACULTY (id_Person, name_Faculty) VALUES (NULL, 'Facultad de Electronia y Electrica');
INSERT INTO FACULTY (id_Person, name_Faculty) VALUES (NULL, 'Facultad de Quimica');
INSERT INTO FACULTY (id_Person, name_Faculty) VALUES (NULL, 'Facultad de Industrial');
INSERT INTO FACULTY (id_Person, name_Faculty) VALUES (NULL, 'Facultad de Minas');

INSERT INTO SCHOOL (id_Faculty, name_School) VALUES (1, 'Sistemas');
INSERT INTO SCHOOL (id_Faculty, name_School) VALUES (1, 'Software');
INSERT INTO SCHOOL (id_Faculty, name_School) VALUES (2, 'Electrica');
INSERT INTO SCHOOL (id_Faculty, name_School) VALUES (2, 'Electronica');
INSERT INTO SCHOOL (id_Faculty, name_School) VALUES (2, 'Telecomunicaciones');
INSERT INTO SCHOOL (id_Faculty, name_School) VALUES (3, 'Quimica');
INSERT INTO SCHOOL (id_Faculty, name_School) VALUES (3, 'Agroindustria');
INSERT INTO SCHOOL (id_Faculty, name_School) VALUES (4, 'Industrial');
INSERT INTO SCHOOL (id_Faculty, name_School) VALUES (4, 'Textil y Confecciones');
INSERT INTO SCHOOL (id_Faculty, name_School) VALUES (5, 'Minas');
INSERT INTO SCHOOL (id_Faculty, name_School) VALUES (5, 'Metalurgica');

INSERT INTO PERSON (FIRST_NAME, LAST_NAME, DNI, PHONE, ADDRESS, EMAIL) VALUES ('Jose', 'Perez Martinez', 71548925, 958123648, 'Av Peru cdra 21', 'joseperez@unmsm.edu.pe');
INSERT INTO PERSON (FIRST_NAME, LAST_NAME, DNI, PHONE, ADDRESS, EMAIL) VALUES ('Miguel', 'Mejia Acevedo',71546768,  943211238, 'Av Peru cdra 15', 'miguelmejia@unmsm.edu.pe');
INSERT INTO PERSON (FIRST_NAME, LAST_NAME, DNI, PHONE, ADDRESS, EMAIL) VALUES ('Carolina', 'Alejo Guerrero', 74564456, 945645645, 'Av Universitaria cdra 11', 'carolinaalejo@unmsm.edu.pe');
INSERT INTO PERSON (FIRST_NAME, LAST_NAME, DNI, PHONE, ADDRESS, EMAIL) VALUES ('Pedro', 'Andrade Bujanda', 74564578, 945645677, 'Av Brasil cdra 3', 'pedroandrade@unmsm.edu.pe');
INSERT INTO PERSON (FIRST_NAME, LAST_NAME, DNI, PHONE, ADDRESS, EMAIL) VALUES ('Juan', 'Aremnta Romero', 71231212, 921312321, 'Av Bolivar cdra 6', 'juanaremnta@unmsm.edu.pe');
INSERT INTO PERSON (FIRST_NAME, LAST_NAME, DNI, PHONE, ADDRESS, EMAIL) VALUES ('Enrique', 'Bernabe Palomino', 73487624, 978678654, 'Av Bolivar cdra 9', 'enriquebernabe@unmsm.edu.pe');
INSERT INTO PERSON (FIRST_NAME, LAST_NAME, DNI, PHONE, ADDRESS, EMAIL) VALUES ('Angel', 'Ramos Gutierrez', 77897864, 912345642, 'Av Colonial cdra 7', 'angelramos@unmsm.edu.pe');
INSERT INTO PERSON (FIRST_NAME, LAST_NAME, DNI, PHONE, ADDRESS, EMAIL) VALUES ('German', 'Arias Rodrigez', 71231234, 932134521, 'Av Marina cdra 10', 'germanarias@unmsm.edu.pe');
INSERT INTO PERSON (FIRST_NAME, LAST_NAME, DNI, PHONE, ADDRESS, EMAIL) VALUES ('Ruben', 'Quispe Quispe', 79789878, 912345645, 'Av Marina cdra 1', 'rubenquispe@unmsm.edu.pe');
INSERT INTO PERSON (FIRST_NAME, LAST_NAME, DNI, PHONE, ADDRESS, EMAIL) VALUES ('Fernando', 'Cardenas Alva', 74678652, 978967865, 'Av Sucre cdra 8', 'fernandocardenas@unmsm.edu.pe');
INSERT INTO PERSON (FIRST_NAME, LAST_NAME, DNI, PHONE, ADDRESS, EMAIL) VALUES ('Alberto', 'Gonzales Carrasco', 73213132, 945645312, 'Av La Mar cdra 7', 'albertogonzales@unmsm.edu.pe');
INSERT INTO PERSON (FIRST_NAME, LAST_NAME, DNI, PHONE, ADDRESS, EMAIL) VALUES ('Diana', 'Tavara Pineda', 72231230, 978987632, 'Av Peru cdra 9', 'dianatavara@unmsm.edu.pe');
INSERT INTO PERSON (FIRST_NAME, LAST_NAME, DNI, PHONE, ADDRESS, EMAIL) VALUES ('Maria', 'Bentacur Taborda', 70213154, 912345652, 'Av Bolivar cdra 12', 'mariabentacur@unmsm.edu.pe');
INSERT INTO PERSON (FIRST_NAME, LAST_NAME, DNI, PHONE, ADDRESS, EMAIL) VALUES ('Rubi', 'Gomez Villa', 77531312, 987645343, 'Av Colonial cdra 4', 'rubigomez@unmsm.edu.pe');
INSERT INTO PERSON (FIRST_NAME, LAST_NAME, DNI, PHONE, ADDRESS, EMAIL) VALUES ('Luis', 'Garcia Rua', 79876786, 902464356, 'Av La Paz cdra 6', 'luisgarcia@unmsm.edu.pe');

INSERT INTO DIRECTOR (ID_PERSON, CODE_DIRECTOR, ID_FACULTY) VALUES (1,'10000001',1);
INSERT INTO DIRECTOR (ID_PERSON, CODE_DIRECTOR, ID_FACULTY) VALUES (2,'10000002',2);

INSERT INTO TEACHER (ID_PERSON, CODE_TEACHER) VALUES (3,'20000001');
INSERT INTO TEACHER (ID_PERSON, CODE_TEACHER) VALUES (4,'20000002');
INSERT INTO TEACHER (ID_PERSON, CODE_TEACHER) VALUES (5,'20000003');
INSERT INTO TEACHER (ID_PERSON, CODE_TEACHER) VALUES (6,'20000004');
INSERT INTO TEACHER (ID_PERSON, CODE_TEACHER) VALUES (7,'20000005');

INSERT INTO STUDENT (ID_PERSON, CODE_STUDENT, ID_SCHOOL) VALUES (8,'30000001',1);
INSERT INTO STUDENT (ID_PERSON, CODE_STUDENT, ID_SCHOOL) VALUES (9,'30000002',1);
INSERT INTO STUDENT (ID_PERSON, CODE_STUDENT, ID_SCHOOL) VALUES (10,'30000003',1);
INSERT INTO STUDENT (ID_PERSON, CODE_STUDENT, ID_SCHOOL) VALUES (11,'30000004',1);
INSERT INTO STUDENT (ID_PERSON, CODE_STUDENT, ID_SCHOOL) VALUES (12,'30000005',2);
INSERT INTO STUDENT (ID_PERSON, CODE_STUDENT, ID_SCHOOL) VALUES (13,'30000006',2);
INSERT INTO STUDENT (ID_PERSON, CODE_STUDENT, ID_SCHOOL) VALUES (14,'30000007',2);
INSERT INTO STUDENT (ID_PERSON, CODE_STUDENT, ID_SCHOOL) VALUES (15,'30000008',2);

INSERT INTO SUBJECT(name_subject) VALUES ('CALCULO I');
INSERT INTO SUBJECT(name_subject) VALUES ('CALCULO II');
INSERT INTO SUBJECT(name_subject) VALUES ('CALCULO III');
INSERT INTO SUBJECT(name_subject) VALUES ('MATEMATICA BASICA');
INSERT INTO SUBJECT(name_subject) VALUES ('MATEMATICA II');
INSERT INTO SUBJECT(name_subject) VALUES ('BIOLOGIA');
INSERT INTO SUBJECT(name_subject) VALUES ('ALGORITMICA I');
INSERT INTO SUBJECT(name_subject) VALUES ('BASE DE DATOS I');

INSERT INTO THEME(id_Subject,name_Theme) VALUES (1,'VARIABLES Y FUNCIONES');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (1,'SUCESIONES');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (1,'LIMITES');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (1,'DERIVADAS');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (1,'TEOREMA DEL VALOR MEDIO Y SUS APLICACIONES');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (1,'FUNCION EXPONENCIAL Y SU APLICACIONES');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (2,'FUNCIONES EN VARIAS VARIABLES');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (2,'DERIVACION IMPLICITA');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (2,'FUNCIONES HOMOGENEAS');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (2,'FUNCIONES DE R^n A R^m');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (3,'INTEGRAL INDEFINIDA, INTEGRAL POR SUSTITUCION');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (3,'TEOREMA FUNDAMENTAL DEL CALCULO');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (3,'AREA, VALOR PROMEDIO, LONGUITUD DE UNA CURVA');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (3,'INTEGRALES RELACIONADAS CON LAS FUNCIONES TRIGONOMÉTRICAS INVERSAS');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (3,'TÉCNICAS DE INTEGRACIÓN ');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (3,'FORMAS INDETERMINADAS, REGLA DE L ´HOPITAL');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (4,'COMBINATORIA, BINOMIO DE NEWTON');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (4,'TRIGONOMETRIA');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (4,'NUMEROS COMPLEJOS');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (4,'POLINOMIOS');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (4,'FUNCIONES LINEALES Y CUADRATICAS');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (4,'FUNCIONES EXPONENCIALES Y LOGARITMICAS');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (5,'MATRICES DETERMINANTES');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (5,'DETERMINANTES');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (5,'SISTEMAS LINEALES');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (5,'VECTORES EN EL ESPACIO');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (5,'ECUACIONES DE RECTAS Y PLANO');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (5,'RECTAS Y PLANOS EN EL ESPACIO');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (6,'AGUA Y SALES MINERALES');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (6,'GLUCIDOS');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (6,'LIPIDOS');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (6,'PROTEINAS');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (6,'ENZIMAS');
INSERT INTO THEME(id_Subject,name_Theme) VALUES (6,'ACIDOS NUCLEICOS');

--------------------------------------------------------------------------------
-- VISTAS
--------------------------------------------------------------------------------
CREATE VIEW VIEW_TEACHER 
  AS
  SELECT PERS.ID_PERSON, TEA.CODE_TEACHER, PERS.FIRST_NAME, PERS.LAST_NAME, PERS.DNI, PERS.PHONE, PERS.ADDRESS, PERS.EMAIL 
  FROM TEACHER TEA, PERSON PERS WHERE TEA.ID_PERSON = PERS.ID_PERSON ORDER BY PERS.ID_PERSON;

CREATE VIEW VIEW_STUDENT 
  AS
  SELECT PERS.ID_PERSON, ST.CODE_STUDENT, PERS.FIRST_NAME, PERS.LAST_NAME, PERS.DNI, PERS.PHONE, PERS.ADDRESS, PERS.EMAIL 
  FROM STUDENT ST, PERSON PERS WHERE ST.ID_PERSON = PERS.ID_PERSON;
  
CREATE VIEW VIEW_DIRECTOR
  AS
  SELECT PERS.ID_PERSON, DT.CODE_DIRECTOR, PERS.FIRST_NAME, PERS.LAST_NAME, PERS.DNI, PERS.PHONE, PERS.ADDRESS, PERS.EMAIL 
  FROM DIRECTOR DT, PERSON PERS WHERE DT.ID_PERSON = PERS.ID_PERSON;
  
CREATE VIEW VIEW_SECTION_SUBJECT
  AS
  SELECT SC.ID_SECTION, SC.SECTION_GROUP, SB.NAME_SUBJECT
  FROM SECTION SC, SUBJECT SB, PERSON PERS WHERE SC.ID_PERSON = PERS.ID_PERSON AND SC.ID_SUBJECT = SB.ID_SUBJECT;
